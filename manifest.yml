apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-services-version-deployment
  namespace: construction-hub
  labels:
    tier: backend
    app: k8s-services-version-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-services-version-app
  template:
    metadata:
      labels:
        tier: backend
        app: k8s-services-version-app
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: k8s-services-version-app
        image: bpsmsconhubconreg.azurecr.io/k8s-services-version:latest
        imagePullPolicy: "Always"
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "250M"
            cpu: "100m"
          limits:
            memory: "500M"
            cpu: "250m"
        env:
        - name: SERVICE_ADDRESS
          value: "https://my308142.crm.ondemand.com/"
        livenessProbe:
          httpGet:
            path: /api/versions
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 30
          failureThreshold: 2
      tolerations:
      - key: "env"
        operator: "Equal"
        value: "conhub"
        effect: "NoSchedule"
      imagePullSecrets:
      - name: acr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-services-version-service
  namespace: construction-hub
  labels:
    app: k8s-services-version-app
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: k8s-services-version-app
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: k8s-services-version-app-ingress
  namespace: construction-hub
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
spec:
  rules:
  - host: orbisconstructionhubncademo.orbis.de
    http:
      paths:
      - path: /version
        backend:
          serviceName: k8s-services-version-service
          servicePort: 80