apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-services-version-deployment
  labels:
    tier: backend
    app: k8s-services-version-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-services-version-app
  template:
    metadata:
      labels:
        tier: backend
        app: k8s-services-version-app
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: k8s-services-version-app
        image: iamnoah4real/k8s-microservices-version
        imagePullPolicy: "Always"
        ports:
        - containerPort: 3000
        resources:
          requests:
            memory: "250M"
            cpu: "100m"
          limits:
            memory: "500M"
            cpu: "250m"
        env:
        - name: K8S_SERVICE_ENDPOINT_SERVICE1
          value: "<url-of-service-version-endpoint>"
        livenessProbe:
          httpGet:
            path: /versions
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 30
          failureThreshold: 2
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-services-version-service
  labels:
    app: k8s-services-version-app
spec:
  type: LoadBalancer
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: k8s-services-version-app